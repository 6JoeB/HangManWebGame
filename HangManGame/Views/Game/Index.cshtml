@using Microsoft.AspNetCore.Http;
@model HangManGame.Models.Guesses;

@{
    ViewData["Title"] = "Hang Man Game";
    string username = Context.Session.GetString("User");
    Player player = Player.Register(username);
}

<div class="page-header">
    <h3> Welcome @player.UserName</h3>
</div>

<div class="container">
    @{
        if (Model.HasLost)
        {
            <p> You Lose :( RIP</p>
            <p> @Html.ActionLink("New Game", "Index", "Game")</p>
        }
        else if (Model.HasWon)
        {
            <p> You Win! :)</p>
            <p> @Html.ActionLink("New Game", "Index", "Game")</p>
        }
        else
        {
            <p>Please enter your guess: </p>

            <form method="Post">
                <label asp-for="@Model.Guess"></label>
                <input asp-for="@Model.Guess" placeholder="Enter your guess..." required value="" max="1" />
                @Html.ValidationMessageFor(m => m.Guess)

                <button type="submit" class="btn btn-primary">Submit</button>

                <p>Your previous guess was: @{@Model.Guess}</p>

                <p>Lives remaining: @{@Model.LivesRemaining}</p>

                @for (int i = 0; i < Model.PreviousGuesses.Count; i++)
                {
                    <input type="hidden" asp-for="@Model.PreviousGuesses[i]" value="@Model.PreviousGuesses[i]" />
                }

                <p>
                    @Model.OutputAnswer()
                </p>

                <p>Letters correctly guessed: </p>
                <ul>
                    @foreach  (var correctGuess in Model.CorrectGuesses)
                    {
                        <li>@correctGuess</li>
                    }
                </ul>

                <p>Letters incorrectly guessed: </p>
                <ul>
                    @foreach  (var incorrectGuess in Model.IncorrectGuesses)
                    {
                        <li>@incorrectGuess</li>
                    }
                </ul>

                <p>Letters still available to guess: </p>
                <ul>
                    @foreach  (var lettersAvailable in Model.LettersAvailable)
                    {
                        <li>@lettersAvailable</li>
                    }
                </ul>


            </form>
        }
    }
</div>