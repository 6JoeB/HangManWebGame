@using Microsoft.AspNetCore.Http;
@model HangManGame.Models.Guesses;

@{
    ViewData["Title"] = "Hang Man Game";
    string username = Context.Session.GetString("User");
    Player player = Player.Register(username);
}

<div class="page-header">
    <h3> Welcome @player.UserName</h3>
</div>
<div class="container">
    @{
        if (Model.HasLost)
        {
            <p> Wipe out! You Lose! </p>
            <p> @Html.ActionLink("New Game", "Index", "Game")</p>
            <p> <img src="images\Hangman.jpeg" alt="looser" /></p>
        }
        else if (Model.HasWon)
        {
            <p> Well done! You are a winner :) </p>
            <p> @Html.ActionLink("New Game", "Index", "Game")</p>
            <p> <img class="img" src="images\freeman.jpeg.png" alt="looser" /></p>

        }
        else
        {

            <p>Please enter your guess. This is Game/Index</p>



            <form method="post">

                <label asp-for="@Model.Guess"></label>
                <input asp-for="@Model.Guess" placeholder="Your guess goes here" required value="" max="1" autofocus />
                @Html.ValidationMessageFor(m => m.Guess)

                <button type="submit" class="btn btn-primary">Submit</button>

                <p>You guessed: @{@Model.Guess}</p>

                <p>Lives remaining: @{@Model.LivesRemaining}</p>


                @for (int i = 0; i < Model.PreviousGuesses.Count; i++)
                {
                    <input type="hidden" asp-for="@Model.PreviousGuesses[i]" value="@Model.PreviousGuesses[i]" />
                }

                <p>
                    @Model.OutputAnswer()
                </p>

                <p>letters correctly guessed: </p>
                <ul>
                    @foreach (var correctGuess in Model.CorrectGuesses)
                    {
                        <li>@correctGuess</li>
                    }
                </ul>

                <p>letters Incorrectly guessed: </p>
                <ul>
                    @foreach (var incorrectGuess in Model.IncorrectGuesses)
                    {
                        <li>@incorrectGuess</li>

                    }
                </ul>

                <p>letters still availible to guess: </p>
                <ul>
                    @foreach (var lettersAvailable in Model.LettersAvailable)
                    {
                        <li>@lettersAvailable</li>
                    }
                </ul>

                <p>

                </p>
            </form>

        }
    }

</div>
